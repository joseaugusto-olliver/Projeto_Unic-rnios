# -*- coding: utf-8 -*-
"""Projeto Unicornios.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1a6v2EJNUIZ4ca7ezZVuNVMjjLiHpotzK
"""

# Importando as Bibliotecas
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

import warnings
warnings.filterwarnings('ignore') # Ignorar alguns avisos

base_dados = pd.read_csv('unicorns till sep 2022.csv')

# Verificar Dimensão
base_dados.shape

# Primeiros Registros
base_dados.head()

# Colunas
base_dados.columns

# renomeando as colunas
base_dados.rename(columns= {
        'Company' : 'Companhia',
        'Valuation ($B)' : 'Valor ($)',
        'Date Joined' : 'Data de Adesão',
        'Country' : 'País',
        'City\xa0' : 'Cidade',
        'Industry' : 'Setor',
        'Investors' : 'Investidores',
            }, inplace=True # Alterando na Base de Dados origem
)

# Verificar o tipo da Informação
base_dados.info()

# Verificando dados Nullos
base_dados.isnull().sum()

# Gráfico
plt.figure(figsize=(15,6))
plt.title('Analisando Campos Nulos')
sns.heatmap(base_dados.isnull());

# Campos Únicos
base_dados.nunique()

# Valores Únicos
base_dados['Setor'].unique()

# Rank Valores Únicos
base_dados['Setor'].value_counts()

# Gráfico setores
plt.figure(figsize=(15,6))
plt.title('Análise dos Setores')
plt.bar(base_dados['Setor'].value_counts().index, base_dados['Setor'].value_counts());
plt.xticks(rotation=45, ha='right');

# Váriavel Países em porcentagem
analise_pais = base_dados['País'].value_counts( normalize=True ) * 100

# Gráfico Países
plt.figure(figsize=(15,6))
plt.title('Análise dos Países gerador de Unicórnios')
plt.pie(
    analise_pais,
    labels = analise_pais.index,
    shadow=True,
    startangle=90,
    autopct='%1.1f%%'
    );

# Gráfico Países - Top 10
plt.figure(figsize=(15,6))
plt.title('Análise dos Países gerador de Unicórnios - Top 10')
plt.pie(
    analise_pais.head(10),
    labels = analise_pais.index[0:10],
    shadow=True,
    startangle=20, # alterei o angulo do startangle para que os nomes ficassem visiveis
    autopct='%1.1f%%'
);

# Conversão para Data
#base_dados['Data de Adesão'] = pd.to_datetime(base_dados['Data de Adesão'])

base_dados['Data de Adesão'].head()

# Extrair Ano e Mês
base_dados['Mes'] = pd.DatetimeIndex(base_dados['Data de Adesão']).month
base_dados['Ano'] = pd.DatetimeIndex(base_dados['Data de Adesão']).year
base_dados.head()

# Tabela Analitica
analise_agrupada = base_dados.groupby( by=['País', 'Ano', 'Mes', 'Companhia']).count()['Id'].reset_index()
analise_agrupada.loc[
    analise_agrupada['País'] == 'Brazil'
]

# Conversão para Numérico
base_dados['Valor ($)'] = pd.to_numeric(base_dados['Valor ($)'].apply(lambda Linha: Linha.replace('$', '')))

base_dados.head()

# Tabela Analitica
analise_pais = base_dados.groupby( by =['País'] ).sum()['Valor ($)'].reset_index()

analise_valor = analise_pais.sort_values('Valor ($)' ,ascending=False).head(20)
analise_valor

# Gráfico de Análise de Valor - TOP 20 Países
plt.figure(figsize=(15,6))
plt.title('Analisando Valor por País - TOP 20')
plt.plot(
    analise_valor['País'],
    analise_valor['Valor ($)'],
    marker='o',
    linestyle='--'
    );
plt.xticks(rotation=45, ha='right');

